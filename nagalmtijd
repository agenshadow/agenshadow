"""
author: Mike
author van de def functies: Nathan
""" 

#importing 
import wave
import numpy as np

chunk = 1024 
rate = 44100
db_drop= 20
results = []
files = []

def calculate_dB(wav_file):
    wf = wave.open(wav_file, 'rb')
    data = wf.readframes(wf.getnframes())
    wf.close()
    
    #neemt de data van de audio signal en zet het om in een numpy array met datatype int16 
    audio_signal = np.abs(np.frombuffer(data, dtype="int16"))

    # Referentie naar 16-bit audio waarden
    ref = 2**15
    
    #berekening van amplitude naar db 
    dB = 20 * np.log10(audio_signal[audio_signal > 0]/ref)
    
    return dB

def find_time_of_drop(wav_file, target_drop_dB):
    dB = calculate_dB(wav_file)
   
    max_dB = np.max(dB)
    imax_dB = np.argmax(dB)

    #vind de index waar de dB dropt met target_drop_dB
    drop_index = np.argmax(dB[imax_dB:] <= (max_dB - db_drop))

    #berekenen de tijd op die index
    time_of_drop = np.round(((drop_index * chunk / rate) * 60/target_drop_dB), decimals=3)

    return time_of_drop

file = r"C:\Users\User\OneDrive - HvA\project\project_3\opnames\calibratie\calibratienagalm4.wav"
time_of_drop = find_time_of_drop(file, db_drop)
results.append(time_of_drop)
files.append(file)

print(results)
